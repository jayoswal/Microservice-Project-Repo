version: '3.1'

services:
  mysql-container:
    container_name: mysql-container
    image: mysql:oraclelinux9
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql-container:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network-external
    restart: no
  phpmyadmin-container:
    container_name: phpmyadmin-container
    image: phpmyadmin:latest
    environment:
      PMA_HOST: mysql-container
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - phpmyadmin-container:/etc/phpmyadmin
    ports:
      - "5050:80"
    networks:
      - app-network-external
    restart: unless-stopped
    depends_on:
      - mysql-container
  rabbitmq-container:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network-external
    depends_on:
      - phpmyadmin-container
    volumes:
      - rabbitmq-container:/var/lib/rabbitmq
  zipkin-container:
    image: openzipkin/zipkin:latest
    container_name: zipkin-container
    ports:
      - "9411:9411"
    networks:
      - app-network-external
    depends_on:
      - rabbitmq-container
  eureka-registry-server-container:
    image: jayoswal20/eureka-registry-server:1.0.0
    container_name: eureka-registry-server-container
    ports:
      - "8761:8761"
    networks:
      - app-network-external
    depends_on:
      - zipkin-container
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://eureka-registry-server-container:8761/actuator/health || exit 1" ]
      interval: 30s
      timeout: 6s
      retries: 5
  config-server-container:
    image: jayoswal20/config-server:1.0.0
    container_name: config-server-container
    ports:
      - "8080:8080"
    networks:
      - app-network-external
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      eureka-registry-server-container:
        condition: service_healthy

# First create the network app-network-external
# through docker compose no code file OR
# docker network create --driver bridge app-network-external
networks:
  app-network-external:
    external: true
#networks:
#  app-network-external:
#    driver: bridge
volumes:
  mysql-container:
  phpmyadmin-container:
  rabbitmq-container:
